%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 6 0 R /F4 8 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.google.com/spreadsheets/d/1otUNmfos6zf2uwn082mtFemHPNqR2E8lOrM1xDmXUV8/edit?usp=sharing)
>> /Border [ 0 0 0 ] /Rect [ 355.8671 616.1339 548.9803 628.1339 ] /Subtype /Link /Type /Annot
>>
endobj
5 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://docs.google.com/spreadsheets/d/1otUNmfos6zf2uwn082mtFemHPNqR2E8lOrM1xDmXUV8/edit?usp=sharing)
>> /Border [ 0 0 0 ] /Rect [ 62.69291 604.1339 388.6129 616.1339 ] /Subtype /Link /Type /Annot
>>
endobj
6 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
7 0 obj
<<
/Annots [ 4 0 R 5 0 R ] /Contents 39 0 R /MediaBox [ 0 0 612 792 ] /Parent 38 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
8 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
9 0 obj
<<
/A <<
/S /URI /Type /Action /URI (http://csiflabs.cs.ucdavis.edu/~ssdavis/50/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 199.1339 271.6129 211.1339 ] /Subtype /Link /Type /Annot
>>
endobj
10 0 obj
<<
/Annots [ 9 0 R ] /Contents 40 0 R /MediaBox [ 0 0 612 792 ] /Parent 38 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
11 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://github.com/jlpteaching/ECS154B/blob/master/lab2/provided/MIPS%20Architecture.pdf)
>> /Border [ 0 0 0 ] /Rect [ 98.56844 436.1339 196.2612 448.1339 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/Annots [ 11 0 R ] /Contents 41 0 R /MediaBox [ 0 0 612 792 ] /Parent 38 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
13 0 obj
<<
/Contents 42 0 R /MediaBox [ 0 0 612 792 ] /Parent 38 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
14 0 obj
<<
/Contents 43 0 R /MediaBox [ 0 0 612 792 ] /Parent 38 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
15 0 obj
<<
/Outlines 17 0 R /PageLabels 44 0 R /PageMode /UseNone /Pages 38 0 R /Type /Catalog
>>
endobj
16 0 obj
<<
/Author () /CreationDate (D:20180312232328+08'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20180312232328+08'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title () /Trapped /False
>>
endobj
17 0 obj
<<
/Count 24 /First 18 0 R /Last 37 0 R /Type /Outlines
>>
endobj
18 0 obj
<<
/Dest [ 7 0 R /XYZ 62.69291 655.1339 0 ] /Next 19 0 R /Parent 17 0 R /Title (Interactive grading signup)
>>
endobj
19 0 obj
<<
/Dest [ 7 0 R /XYZ 62.69291 592.1339 0 ] /Next 20 0 R /Parent 17 0 R /Prev 18 0 R /Title (Goals)
>>
endobj
20 0 obj
<<
/Dest [ 7 0 R /XYZ 62.69291 517.1339 0 ] /Next 21 0 R /Parent 17 0 R /Prev 19 0 R /Title (Description)
>>
endobj
21 0 obj
<<
/Count 2 /Dest [ 7 0 R /XYZ 62.69291 394.1339 0 ] /First 22 0 R /Last 23 0 R /Next 24 0 R /Parent 17 0 R 
  /Prev 20 0 R /Title (Provided Blocks)
>>
endobj
22 0 obj
<<
/Dest [ 7 0 R /XYZ 62.69291 319.1339 0 ] /Next 23 0 R /Parent 21 0 R /Title (ALU)
>>
endobj
23 0 obj
<<
/Dest [ 10 0 R /XYZ 62.69291 649.1339 0 ] /Parent 21 0 R /Prev 22 0 R /Title (Register File)
>>
endobj
24 0 obj
<<
/Count 4 /Dest [ 10 0 R /XYZ 62.69291 493.1339 0 ] /First 25 0 R /Last 28 0 R /Next 29 0 R /Parent 17 0 R 
  /Prev 21 0 R /Title (Blocks to Implement)
>>
endobj
25 0 obj
<<
/Dest [ 10 0 R /XYZ 62.69291 430.1339 0 ] /Next 26 0 R /Parent 24 0 R /Title (PC)
>>
endobj
26 0 obj
<<
/Dest [ 10 0 R /XYZ 62.69291 346.1339 0 ] /Next 27 0 R /Parent 24 0 R /Prev 25 0 R /Title (Instruction Memory - ROM)
>>
endobj
27 0 obj
<<
/Dest [ 10 0 R /XYZ 62.69291 136.1339 0 ] /Next 28 0 R /Parent 24 0 R /Prev 26 0 R /Title (Data Memory - RAM)
>>
endobj
28 0 obj
<<
/Dest [ 12 0 R /XYZ 62.69291 565.1339 0 ] /Parent 24 0 R /Prev 27 0 R /Title (Control Unit)
>>
endobj
29 0 obj
<<
/Count 5 /Dest [ 12 0 R /XYZ 62.69291 505.1339 0 ] /First 30 0 R /Last 34 0 R /Next 35 0 R /Parent 17 0 R 
  /Prev 24 0 R /Title (MIPS Architecture)
>>
endobj
30 0 obj
<<
/Dest [ 12 0 R /XYZ 62.69291 472.1339 0 ] /Next 31 0 R /Parent 29 0 R /Title (Instructions to Implement)
>>
endobj
31 0 obj
<<
/Count 2 /Dest [ 12 0 R /XYZ 62.69291 340.1339 0 ] /First 32 0 R /Last 33 0 R /Next 34 0 R /Parent 29 0 R 
  /Prev 30 0 R /Title (JAL and JR)
>>
endobj
32 0 obj
<<
/Dest [ 12 0 R /XYZ 62.69291 280.1339 0 ] /Next 33 0 R /Parent 31 0 R /Title (JAL)
>>
endobj
33 0 obj
<<
/Dest [ 12 0 R /XYZ 62.69291 169.1339 0 ] /Parent 31 0 R /Prev 32 0 R /Title (JR)
>>
endobj
34 0 obj
<<
/Dest [ 13 0 R /XYZ 62.69291 715.1339 0 ] /Parent 29 0 R /Prev 31 0 R /Title (Probes)
>>
endobj
35 0 obj
<<
/Dest [ 13 0 R /XYZ 62.69291 379.1339 0 ] /Next 36 0 R /Parent 17 0 R /Prev 29 0 R /Title (Grading)
>>
endobj
36 0 obj
<<
/Dest [ 13 0 R /XYZ 62.69291 190.1339 0 ] /Next 37 0 R /Parent 17 0 R /Prev 35 0 R /Title (Submission)
>>
endobj
37 0 obj
<<
/Dest [ 14 0 R /XYZ 62.69291 607.1339 0 ] /Parent 17 0 R /Prev 36 0 R /Title (Hints)
>>
endobj
38 0 obj
<<
/Count 5 /Kids [ 7 0 R 10 0 R 12 0 R 13 0 R 14 0 R ] /Type /Pages
>>
endobj
39 0 obj
<<
/Length 8276
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 703.1339 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (ECS 154B Lab 2, Winter 2018) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 685.1339 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Due by 9:00 AM on February 5, 2018) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 667.1339 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Via Canvas) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 634.1339 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Interactive grading signup) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 604.1339 cm
q
BT 1 0 0 1 0 14 Tm .326743 Tw 12 TL /F1 10 Tf 0 0 0 rg (You may only sign up after you have submitted your assignment. ) Tj 0 0 .501961 rg (https://docs.google.com/spreadsheets/d/1ot) Tj T* 0 Tw (UNmfos6zf2uwn082mtFemHPNqR2E8lOrM1xDmXUV8/edit?usp=sharing) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 571.1339 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Goals) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 559.1339 cm
Q
q
1 0 0 1 62.69291 559.1339 cm
Q
q
1 0 0 1 62.69291 547.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Build and test a single cycle MIPS CPU that implements a subset of the MIPS instruction set.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 541.1339 cm
Q
q
1 0 0 1 62.69291 529.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Design a combinational logic control unit.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 529.1339 cm
Q
q
1 0 0 1 62.69291 496.1339 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Description) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 454.1339 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 1.36022 Tw (In this lab, you will use Logisim to build a single cycle CPU to understand the MIPS control and datapath) Tj T* 0 Tw 2.306128 Tw (signals. To test your CPU, you will run an assembly language program given to you, and simulate the) Tj T* 0 Tw (operations in Logisim. You will be given several functional blocks to help you out.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 424.1339 cm
q
BT 1 0 0 1 0 14 Tm 3.586945 Tw 12 TL /F1 10 Tf 0 0 0 rg (** ) Tj /F2 10 Tf (DO NOT CHANGE THE GIVEN SUBCIRCUITS IN ANY WAY. DOING SO WILL LEAD TO AN) Tj T* 0 Tw (AUTOMATIC ZERO.) Tj /F1 10 Tf ( **) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 406.1339 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (We will be testing circuits for plagiarism with a new circuit comparison tool courtesy of Christopher Nitta.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 373.1339 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Provided Blocks) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 331.1339 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL .236709 Tw (In creating your CPU, you are allowed to use all of the features and modules available in Logisim. You will be) Tj T* 0 Tw 1.251343 Tw (given an empty project to start your lab, which includes an implementation of an ALU and a Register File.) Tj T* 0 Tw (Those blocks are described below.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 301.1339 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (ALU) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 289.1339 cm
Q
q
1 0 0 1 62.69291 289.1339 cm
Q
q
1 0 0 1 62.69291 277.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (A) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (B) Tj /F1 10 Tf (: The 32 bit data inputs to the ALU.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 271.1339 cm
Q
q
1 0 0 1 62.69291 259.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ALUResult) Tj /F1 10 Tf (: The 32 bit result of the ALU operation.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 253.1339 cm
Q
q
1 0 0 1 62.69291 241.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Overflow) Tj /F1 10 Tf (: Not used in this lab.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 235.1339 cm
Q
q
1 0 0 1 62.69291 223.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Shamt) Tj /F1 10 Tf (: 5 bit shift amount. Not used in this lab. Connect a constant zero to this input.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 217.1339 cm
Q
q
1 0 0 1 62.69291 205.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Zero) Tj /F1 10 Tf (: A flag bit that is set when the ALU result equals zero \(all bits are low\).) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 199.1339 cm
Q
q
1 0 0 1 62.69291 187.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ALUCtl) Tj /F1 10 Tf (: The 3 bit control input, as described in the following table:) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 187.1339 cm
Q
q
1 0 0 1 62.69291 181.1339 cm
Q
q
1 0 0 1 62.69291 91.13386 cm
1 1 1 rg
n 0 90 486.6142 -18 re f*
.878431 .878431 .878431 rg
n 0 72 486.6142 -18 re f*
1 1 1 rg
n 0 54 486.6142 -18 re f*
.878431 .878431 .878431 rg
n 0 36 486.6142 -18 re f*
1 1 1 rg
n 0 18 486.6142 -18 re f*
.960784 .960784 .862745 rg
n 0 90 486.6142 -18 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
.960784 .960784 .862745 rg
n 0 0 146.1496 12 re f*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 50.0098 0 Td (Instruction) Tj T* -50.0098 0 Td ET
Q
Q
q
1 0 0 1 164.1496 75 cm
q
.960784 .960784 .862745 rg
n 0 0 97.48819 12 re f*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 30.12909 0 Td (ALUCtl2) Tj T* -30.12909 0 Td ET
Q
Q
q
1 0 0 1 273.6378 75 cm
q
.960784 .960784 .862745 rg
n 0 0 97.48819 12 re f*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 30.12909 0 Td (ALUCtl1) Tj T* -30.12909 0 Td ET
Q
Q
q
1 0 0 1 383.126 75 cm
q
.960784 .960784 .862745 rg
n 0 0 97.48819 12 re f*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 30.12909 0 Td (ALUCtl0) Tj T* -30.12909 0 Td ET
Q
Q
0 0 0 rg
q
1 0 0 1 6 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (AND) Tj T* ET
Q
Q
q
1 0 0 1 164.1496 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 273.6378 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 383.126 57 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (ADD) Tj T* ET
Q
Q
q
1 0 0 1 164.1496 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 273.6378 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 383.126 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (OR) Tj T* ET
Q
Q
q
1 0 0 1 164.1496 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 273.6378 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 383.126 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (SUB) Tj T* ET
Q
Q
q
1 0 0 1 164.1496 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 273.6378 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 383.126 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 0 m 486.6142 0 l S
n 0 72 m 486.6142 72 l S
n 0 54 m 486.6142 54 l S
n 0 36 m 486.6142 36 l S
n 0 18 m 486.6142 18 l S
n 158.1496 0 m 158.1496 90 l S
n 267.6378 0 m 267.6378 90 l S
n 377.126 0 m 377.126 90 l S
n 0 90 m 486.6142 90 l S
n 0 0 m 0 90 l S
n 486.6142 0 m 486.6142 90 l S
Q
Q
 
endstream
endobj
40 0 obj
<<
/Length 9002
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 679.1339 cm
1 1 1 rg
n 0 36 486.6142 -18 re f*
.878431 .878431 .878431 rg
n 0 18 486.6142 -18 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (SLT) Tj T* ET
Q
Q
q
1 0 0 1 164.1496 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 273.6378 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 383.126 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 6 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (XOR) Tj T* ET
Q
Q
q
1 0 0 1 164.1496 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 0 0 1 273.6378 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0) Tj T* ET
Q
Q
q
1 0 0 1 383.126 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 36 m 486.6142 36 l S
n 0 18 m 486.6142 18 l S
n 158.1496 0 m 158.1496 36 l S
n 267.6378 0 m 267.6378 36 l S
n 377.126 0 m 377.126 36 l S
n 0 0 m 0 36 l S
n 486.6142 0 m 486.6142 36 l S
n 0 0 m 486.6142 0 l S
Q
Q
q
1 0 0 1 62.69291 679.1339 cm
Q
q
1 0 0 1 62.69291 661.1339 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (More instruction types to be supported will be added in Lab 3, thus the extra ALUCtl signal.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 631.1339 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Register File) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 619.1339 cm
Q
q
1 0 0 1 62.69291 619.1339 cm
Q
q
1 0 0 1 62.69291 607.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Clock) Tj /F1 10 Tf (: The main clock signal.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 601.1339 cm
Q
q
1 0 0 1 62.69291 589.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (RdAddr1) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (RdAddr2) Tj /F1 10 Tf (: The 5 bit register addresses to read. MIPS has 32 registers in its register file.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 583.1339 cm
Q
q
1 0 0 1 62.69291 571.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (RdData1) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (RdData2) Tj /F1 10 Tf (: The 32 bit data values from the read registers.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 565.1339 cm
Q
q
1 0 0 1 62.69291 553.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (WrAddr) Tj /F1 10 Tf (: The 5 bit register address to write.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 547.1339 cm
Q
q
1 0 0 1 62.69291 523.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm 1.467588 Tw 12 TL /F2 10 Tf 0 0 0 rg (WrReg) Tj /F1 10 Tf (: A control signal that causes the register file to be written to when high. If ) Tj /F2 10 Tf (WrReg) Tj /F1 10 Tf ( is low, no) Tj T* 0 Tw (register values will change.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 517.1339 cm
Q
q
1 0 0 1 62.69291 505.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (WrData) Tj /F1 10 Tf (: The 32 bit value to store in the register specified by ) Tj /F2 10 Tf (WrAddr) Tj /F1 10 Tf (, if ) Tj /F2 10 Tf (WrReg) Tj /F1 10 Tf ( is set.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 505.1339 cm
Q
q
1 0 0 1 62.69291 472.1339 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Blocks to Implement) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 442.1339 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .974121 Tw (You will need to add additional logic blocks to your diagram: a PC, an instruction memory, a data memory,) Tj T* 0 Tw (and combinational logic circuits to decode the current instruction word and enable the respective datapaths.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 412.1339 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (PC) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 400.1339 cm
Q
q
1 0 0 1 62.69291 400.1339 cm
Q
q
1 0 0 1 62.69291 388.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use a 32 bit Register as your PC.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 382.1339 cm
Q
q
1 0 0 1 62.69291 358.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F2 10 Tf 12 TL .711612 Tw (Please note that MIPS is a byte addressable architecture, and therefore PC is incremented by 4,) Tj T* 0 Tw (not 1.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 358.1339 cm
Q
q
1 0 0 1 62.69291 328.1339 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Instruction Memory - ROM) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 316.1339 cm
Q
q
1 0 0 1 62.69291 316.1339 cm
Q
q
1 0 0 1 62.69291 292.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .064956 Tw (Use an 8 bit address, 32 bit data ROM from the memory library as your instruction memory, to which you) Tj T* 0 Tw (can load your hex code.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 286.1339 cm
Q
q
1 0 0 1 62.69291 250.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .366716 Tw 12 TL /F1 10 Tf 0 0 0 rg (A sample test program will be included. To load the instructions into your ROM, right-click the ROM and) Tj T* 0 Tw .942761 Tw (select ) Tj /F4 10 Tf (Edit Contents...) Tj /F1 10 Tf ( In the Hex Editor that pops up, click ) Tj /F4 10 Tf (Open) Tj /F1 10 Tf ( and select ) Tj /F2 10 Tf (instructions.lst) Tj /F1 10 Tf (, which is) Tj T* 0 Tw (provided with the assignment files.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 244.1339 cm
Q
q
1 0 0 1 62.69291 232.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The corresponding MIPS instructions are in ) Tj /F2 10 Tf (instructions.mps) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 226.1339 cm
Q
q
1 0 0 1 62.69291 190.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 4.795706 Tw 12 TL /F1 10 Tf 0 0 0 rg (You can assemble your own test programs using Sean Davis\222 ASIDE program, available at) Tj T* 0 Tw 3.104016 Tw 0 0 .501961 rg (http://csiflabs.cs.ucdavis.edu/~ssdavis/50/) Tj 0 0 0 rg (. After compiling, you will need to edit the ) Tj /F3 10 Tf 0 0 0 rg (.lst) Tj /F1 10 Tf 0 0 0 rg ( file that) Tj T* 0 Tw (corresponds to your code to match the input that Logisim expects.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 184.1339 cm
Q
q
1 0 0 1 62.69291 148.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .46201 Tw 12 TL /F1 10 Tf 0 0 0 rg (The MIPS architecture is byte addressable, so the PC is incremented by 4 to reach the next instruction.) Tj T* 0 Tw 2.564945 Tw (For example the first instruction will be at ) Tj /F3 10 Tf 0 0 0 rg (0x00000000) Tj /F1 10 Tf 0 0 0 rg (, the second at ) Tj /F3 10 Tf 0 0 0 rg (0x00000004) Tj /F1 10 Tf 0 0 0 rg (, the third at) Tj T* 0 Tw /F3 10 Tf 0 0 0 rg (0x00000008) Tj /F1 10 Tf 0 0 0 rg (, and so on.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 148.1339 cm
Q
q
1 0 0 1 62.69291 118.1339 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Data Memory - RAM) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 106.1339 cm
Q
q
1 0 0 1 62.69291 106.1339 cm
Q
q
1 0 0 1 62.69291 82.13386 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .180746 Tw (Use an 8 bit address, 32 bit data RAM from the memory library as your data memory. The separate load) Tj T* 0 Tw (and store ports option is easier to use but you can use the other two options if you\222d like.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 76.86614 cm
Q
 
endstream
endobj
41 0 obj
<<
/Length 9660
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 703.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (A) Tj /F1 10 Tf (: the 8 bit address of the word you want to access.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 697.1339 cm
Q
q
1 0 0 1 62.69291 685.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (D) Tj /F1 10 Tf (, left side: the 32 bit word to be written or stored at the address specified by A.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 679.1339 cm
Q
q
1 0 0 1 62.69291 667.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (str) Tj /F1 10 Tf (: When high, the value on the left D is stored at address A.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 661.1339 cm
Q
q
1 0 0 1 62.69291 649.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (sel) Tj /F1 10 Tf (: When 0, the chip is disabled. Set to high or leave floating.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 643.1339 cm
Q
q
1 0 0 1 62.69291 631.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (^) Tj /F1 10 Tf (: the main clock signal.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 625.1339 cm
Q
q
1 0 0 1 62.69291 613.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ld) Tj /F1 10 Tf (: When high, the value on the memory at address A is placed on the right D.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 607.1339 cm
Q
q
1 0 0 1 62.69291 595.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (clr) Tj /F1 10 Tf (: When high, sets all of the values in the RAM to 0. Either set low or leave floating.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 589.1339 cm
Q
q
1 0 0 1 62.69291 577.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (D) Tj /F1 10 Tf (, right side: the 32 bit word to be read or loaded from the address specified by A.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 577.1339 cm
Q
q
1 0 0 1 62.69291 547.1339 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Control Unit) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 517.1339 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .322454 Tw (The control unit outputs the various signals for the datapath that are specific to each instruction. You can find) Tj T* 0 Tw (more information about how to implement this in the lecture notes or in the book.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 484.1339 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (MIPS Architecture) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 454.1339 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Instructions to Implement) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 424.1339 cm
q
BT 1 0 0 1 0 14 Tm .432761 Tw 12 TL /F1 10 Tf 0 0 0 rg (A PDF, ) Tj 0 0 .501961 rg (MIPS Architecture.pdf) Tj 0 0 0 rg (, was included to help you understand the encoding of the instructions that you) Tj T* 0 Tw (will need to implement. They are as follows:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 418.1339 cm
Q
q
1 0 0 1 62.69291 418.1339 cm
Q
q
1 0 0 1 62.69291 406.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Data instructions: ) Tj /F3 10 Tf 0 0 0 rg (ADD,) Tj ( ) Tj (ADDI,) Tj ( ) Tj (AND,) Tj ( ) Tj (ANDI,) Tj ( ) Tj (OR,) Tj ( ) Tj (ORI,) Tj ( ) Tj (SLT,) Tj ( ) Tj (SUB,) Tj ( ) Tj (XOR) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 400.1339 cm
Q
q
1 0 0 1 62.69291 388.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Memory access instructions: ) Tj /F3 10 Tf 0 0 0 rg (LW,) Tj ( ) Tj (SW) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 382.1339 cm
Q
q
1 0 0 1 62.69291 370.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Control flow instructions: ) Tj /F3 10 Tf 0 0 0 rg (BEQ,) Tj ( ) Tj (J,) Tj ( ) Tj (JAL,) Tj ( ) Tj (JR) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 370.1339 cm
Q
q
1 0 0 1 62.69291 352.1339 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Note that you are not required to include a branch delay slot in this assignment.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 322.1339 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F3 15 Tf 0 0 0 rg (JAL) Tj /F2 15 Tf 0 0 0 rg ( and ) Tj /F3 15 Tf 0 0 0 rg (JR) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 292.1339 cm
q
BT 1 0 0 1 0 14 Tm -0.007083 Tw 12 TL /F1 10 Tf 0 0 0 rg (The book does not explain too much about ) Tj /F3 10 Tf 0 0 0 rg (JAL) Tj /F1 10 Tf 0 0 0 rg ( or ) Tj /F3 10 Tf 0 0 0 rg (JAR) Tj /F1 10 Tf 0 0 0 rg (, nor give any hints on how to implement them, so it will) Tj T* 0 Tw (be up to you to figure out what you need to do.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 265.1339 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (JAL) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 247.1339 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (JAL) Tj /F1 10 Tf 0 0 0 rg ( \(jump and link\) is just like ) Tj /F3 10 Tf 0 0 0 rg (J) Tj /F1 10 Tf 0 0 0 rg (, except it stores the contents of ) Tj /F3 10 Tf 0 0 0 rg (PC) Tj ( ) Tj (+) Tj ( ) Tj (4) Tj /F1 10 Tf 0 0 0 rg ( in register ) Tj /F3 10 Tf 0 0 0 rg ($31) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 241.1339 cm
Q
q
1 0 0 1 62.69291 241.1339 cm
Q
q
1 0 0 1 62.69291 229.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (Use) Tj /F1 10 Tf (: ) Tj /F3 10 Tf 0 0 0 rg (jal) Tj ( ) Tj (offset) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 223.1339 cm
Q
q
1 0 0 1 62.69291 211.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (Effect) Tj /F1 10 Tf (: ) Tj /F3 10 Tf 0 0 0 rg ($31) Tj ( ) Tj (=) Tj ( ) Tj (PC) Tj ( ) Tj (+) Tj ( ) Tj (4.) Tj ( ) Tj (PC[31\2050]) Tj ( ) Tj (=) Tj ( ) Tj (PC) Tj ( ) Tj (+) Tj ( ) Tj (4[31\20528],) Tj ( ) Tj (Inst[25\2050],) Tj ( ) Tj (00) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 205.1339 cm
Q
q
1 0 0 1 62.69291 181.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .287761 Tw 12 TL /F4 10 Tf 0 0 0 rg (Encoding) Tj /F1 10 Tf (: ) Tj /F3 10 Tf 0 0 0 rg (0000) Tj ( ) Tj (11ii) Tj ( ) Tj (iiii) Tj ( ) Tj (iiii) Tj ( ) Tj (iiii) Tj ( ) Tj (iiii) Tj ( ) Tj (iiii) Tj ( ) Tj (iiii) Tj /F1 10 Tf 0 0 0 rg (, where the ) Tj /F3 10 Tf 0 0 0 rg (i) Tj /F1 10 Tf 0 0 0 rg (\222s are the bits encoding the) Tj T* 0 Tw (immediate value.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 181.1339 cm
Q
q
1 0 0 1 62.69291 154.1339 cm
q
BT 1 0 0 1 0 2.5 Tm 15 TL /F3 12.5 Tf 0 0 0 rg (JR) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 136.1339 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F3 10 Tf 0 0 0 rg (JR) Tj /F1 10 Tf 0 0 0 rg ( \(jump, register\) sets the PC to the value contained in register ) Tj /F3 10 Tf 0 0 0 rg (s) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 130.1339 cm
Q
q
1 0 0 1 62.69291 130.1339 cm
Q
q
1 0 0 1 62.69291 118.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (Use) Tj /F1 10 Tf (: ) Tj /F3 10 Tf 0 0 0 rg (jr) Tj ( ) Tj ($s) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 112.1339 cm
Q
q
1 0 0 1 62.69291 100.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (Effect) Tj /F1 10 Tf (: ) Tj /F3 10 Tf 0 0 0 rg (PC) Tj ( ) Tj (=) Tj ( ) Tj ($s) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 94.13386 cm
Q
q
1 0 0 1 62.69291 82.13386 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F4 10 Tf 0 0 0 rg (Encoding) Tj /F1 10 Tf (: ) Tj /F3 10 Tf 0 0 0 rg (0000) Tj ( ) Tj (00ss) Tj ( ) Tj (sss0) Tj ( ) Tj (0000) Tj ( ) Tj (0000) Tj ( ) Tj (0000) Tj ( ) Tj (0000) Tj ( ) Tj (1000) Tj /F1 10 Tf 0 0 0 rg (, where ) Tj /F3 10 Tf 0 0 0 rg (s) Tj /F1 10 Tf 0 0 0 rg ( is the address of the register.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 82.13386 cm
Q
 
endstream
endobj
42 0 obj
<<
/Length 9263
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 697.1339 cm
q
BT 1 0 0 1 0 3 Tm 18 TL /F2 15 Tf 0 0 0 rg (Probes) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 679.1339 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The following probes are included to help you debug your circuit:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 673.1339 cm
Q
q
1 0 0 1 62.69291 391.1339 cm
1 1 1 rg
n 0 282 486.6142 -18 re f*
.878431 .878431 .878431 rg
n 0 264 486.6142 -18 re f*
1 1 1 rg
n 0 246 486.6142 -30 re f*
.878431 .878431 .878431 rg
n 0 216 486.6142 -30 re f*
1 1 1 rg
n 0 186 486.6142 -30 re f*
.878431 .878431 .878431 rg
n 0 156 486.6142 -30 re f*
1 1 1 rg
n 0 126 486.6142 -18 re f*
.878431 .878431 .878431 rg
n 0 108 486.6142 -18 re f*
1 1 1 rg
n 0 90 486.6142 -30 re f*
.878431 .878431 .878431 rg
n 0 60 486.6142 -30 re f*
1 1 1 rg
n 0 30 486.6142 -30 re f*
.960784 .960784 .862745 rg
n 0 282 486.6142 -18 re f*
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 267 cm
q
.960784 .960784 .862745 rg
n 0 0 150.2047 12 re f*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 47.03736 0 Td (Label Name) Tj T* -47.03736 0 Td ET
Q
Q
q
1 0 0 1 168.2047 267 cm
q
.960784 .960784 .862745 rg
n 0 0 150.2047 12 re f*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 61.48736 0 Td (Radix) Tj T* -61.48736 0 Td ET
Q
Q
q
1 0 0 1 330.4094 267 cm
q
.960784 .960784 .862745 rg
n 0 0 150.2047 12 re f*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 47.59736 0 Td (Description) Tj T* -47.59736 0 Td ET
Q
Q
0 0 0 rg
q
1 0 0 1 6 249 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PC) Tj T* ET
Q
Q
q
1 0 0 1 168.2047 249 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Unsigned Decimal) Tj T* ET
Q
Q
q
1 0 0 1 330.4094 249 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The current value of the PC.) Tj T* ET
Q
Q
q
1 0 0 1 6 231 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (WrReg) Tj T* ET
Q
Q
q
1 0 0 1 168.2047 231 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Binary) Tj T* ET
Q
Q
q
1 0 0 1 330.4094 219 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (1 if writing to the register file, 0) Tj T* (otherwise.) Tj T* ET
Q
Q
q
1 0 0 1 6 201 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (WrAddr) Tj T* ET
Q
Q
q
1 0 0 1 168.2047 201 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Unsigned Decimal) Tj T* ET
Q
Q
q
1 0 0 1 330.4094 189 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (The address of the register that is) Tj T* (going to be written to.) Tj T* ET
Q
Q
q
1 0 0 1 6 171 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (WrData) Tj T* ET
Q
Q
q
1 0 0 1 168.2047 171 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Signed Decimal) Tj T* ET
Q
Q
q
1 0 0 1 330.4094 159 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (The value that is going to be) Tj T* (written to the register.) Tj T* ET
Q
Q
q
1 0 0 1 6 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (MemWr) Tj T* ET
Q
Q
q
1 0 0 1 168.2047 141 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Binary) Tj T* ET
Q
Q
q
1 0 0 1 330.4094 129 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (1 if writing to memory, 0) Tj T* (otherwise.) Tj T* ET
Q
Q
q
1 0 0 1 6 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (MemData) Tj T* ET
Q
Q
q
1 0 0 1 168.2047 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Signed Decimal) Tj T* ET
Q
Q
q
1 0 0 1 330.4094 111 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The data to be written to memory.) Tj T* ET
Q
Q
q
1 0 0 1 6 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Branch) Tj T* ET
Q
Q
q
1 0 0 1 168.2047 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Binary) Tj T* ET
Q
Q
q
1 0 0 1 330.4094 93 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1 if taking a branch, 0 otherwise.) Tj T* ET
Q
Q
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Jump) Tj T* ET
Q
Q
q
1 0 0 1 168.2047 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Binary) Tj T* ET
Q
Q
q
1 0 0 1 330.4094 63 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (1 if executing the jump) Tj T* (instruction, 0 otherwise.) Tj T* ET
Q
Q
q
1 0 0 1 6 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Jal) Tj T* ET
Q
Q
q
1 0 0 1 168.2047 45 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Binary) Tj T* ET
Q
Q
q
1 0 0 1 330.4094 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (1 if executing the jump and link) Tj T* (instruction, 0 otherwise.) Tj T* ET
Q
Q
q
1 0 0 1 6 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Jr) Tj T* ET
Q
Q
q
1 0 0 1 168.2047 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Binary) Tj T* ET
Q
Q
q
1 0 0 1 330.4094 3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL (1 if executing the jump register) Tj T* (instruction, 0 otherwise.) Tj T* ET
Q
Q
q
1 J
1 j
0 0 0 RG
.25 w
n 0 264 m 486.6142 264 l S
n 0 246 m 486.6142 246 l S
n 0 216 m 486.6142 216 l S
n 0 186 m 486.6142 186 l S
n 0 156 m 486.6142 156 l S
n 0 126 m 486.6142 126 l S
n 0 108 m 486.6142 108 l S
n 0 90 m 486.6142 90 l S
n 0 60 m 486.6142 60 l S
n 0 30 m 486.6142 30 l S
n 162.2047 0 m 162.2047 282 l S
n 324.4094 0 m 324.4094 282 l S
n 0 282 m 486.6142 282 l S
n 0 0 m 486.6142 0 l S
n 0 0 m 0 282 l S
n 486.6142 0 m 486.6142 282 l S
Q
Q
q
1 0 0 1 62.69291 391.1339 cm
Q
q
1 0 0 1 62.69291 358.1339 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Grading) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 316.1339 cm
q
BT 1 0 0 1 0 26 Tm .110787 Tw 12 TL /F1 10 Tf 0 0 0 rg (To grade your assignment, the TAs will run your CPU with the instructions in the file ) Tj /F2 10 Tf (instructions.lst) Tj /F1 10 Tf ( and look) Tj T* 0 Tw 4.789657 Tw (at the contents of your registers after the program is finished. If you look at the comments in) Tj T* 0 Tw /F2 10 Tf (instructions.mps) Tj /F1 10 Tf (, it will tell you what the final states of the registers and memory locations should be.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 310.1339 cm
Q
q
1 0 0 1 62.69291 310.1339 cm
Q
q
1 0 0 1 62.69291 220.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 75 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (50% Implementation) Tj T* ET
Q
Q
q
1 0 0 1 23 69 cm
Q
q
1 0 0 1 23 69 cm
Q
q
1 0 0 1 23 57 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (25% for correct implementation of non-control instructions: registers 1 to 10 are all correct.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 51 cm
Q
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm -0.015364 Tw 12 TL /F1 10 Tf 0 0 0 rg (25% for correct implementation of control instructions ) Tj /F3 10 Tf 0 0 0 rg (BEQ) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F3 10 Tf 0 0 0 rg (J) Tj /F1 10 Tf 0 0 0 rg (, ) Tj /F3 10 Tf 0 0 0 rg (JAL) Tj /F1 10 Tf 0 0 0 rg (, and ) Tj /F3 10 Tf 0 0 0 rg (JR) Tj /F1 10 Tf 0 0 0 rg (. In addition to the above,) Tj T* 0 Tw .34443 Tw (register 6 is correct, registers 11 to 14 are zero, register 31 is correct, and the program ends in the) Tj T* 0 Tw (infinite loop.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Partial credit at the grader\222s discretion.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 214.1339 cm
Q
q
1 0 0 1 62.69291 202.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (50% Interactive Grading) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 202.1339 cm
Q
q
1 0 0 1 62.69291 169.1339 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Submission) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 139.1339 cm
q
BT 1 0 0 1 0 14 Tm .084951 Tw 12 TL /F2 10 Tf 0 0 0 rg (Warning) Tj /F1 10 Tf (: read the submission instructions carefully. Failure to adhere to the instructions will result in a loss of) Tj T* 0 Tw (points.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 133.1339 cm
Q
q
1 0 0 1 62.69291 133.1339 cm
Q
q
1 0 0 1 62.69291 79.13386 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Upload to Canvas the zip/tar of your .circ file along with a README file that contains:) Tj T* ET
Q
Q
q
1 0 0 1 23 33 cm
Q
q
1 0 0 1 23 33 cm
Q
q
1 0 0 1 23 21 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The names of you and your partner.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 15 cm
Q
q
1 0 0 1 23 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Any difficulties you had.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
 
endstream
endobj
43 0 obj
<<
/Length 4881
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 685.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 6 17 Tm  T* ET
q
1 0 0 1 23 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Anything that doesn\222t work correctly and why. This will help for partial credit.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 9 cm
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Anything you feel that the graders should know.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 23 -3 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 679.1339 cm
Q
q
1 0 0 1 62.69291 655.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm -0.061055 Tw 12 TL /F2 10 Tf 0 0 0 rg (Copy and paste the README into the comment box when you are submitting your assignment) Tj /F1 10 Tf (, as) Tj T* 0 Tw (well.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 649.1339 cm
Q
q
1 0 0 1 62.69291 637.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Only one partner should submit the assignment.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 631.1339 cm
Q
q
1 0 0 1 62.69291 619.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (You may submit your assignment as many times as you want.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 619.1339 cm
Q
q
1 0 0 1 62.69291 586.1339 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Hints) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 574.1339 cm
Q
q
1 0 0 1 62.69291 574.1339 cm
Q
q
1 0 0 1 62.69291 538.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 26 Tm /F1 10 Tf 12 TL 3.64109 Tw (You can use Logisim\222s Analyze Circuit tool, under the Project menu, to automatically construct) Tj T* 0 Tw .267304 Tw (combinational circuits for you. This can be an extremely time-saving tool, so make an effort to learn how) Tj T* 0 Tw (to use it.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 532.1339 cm
Q
q
1 0 0 1 62.69291 484.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 38 Tm .587062 Tw 12 TL /F1 10 Tf 0 0 0 rg (Test and debug in steps. Start with a subset of the lab requirements, implement it, test it, and then add) Tj T* 0 Tw .87887 Tw (other requirements. Performing the testing and debugging in steps will ease your efforts. For example,) Tj T* 0 Tw -0.072239 Tw (you could implement the R-type and ) Tj /F3 10 Tf 0 0 0 rg (ADDI) Tj /F1 10 Tf 0 0 0 rg ( instructions, and verify that those work as intended. Then, add) Tj T* 0 Tw (the branch instruction, and finally add the memory access instructions.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 478.1339 cm
Q
q
1 0 0 1 62.69291 454.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .428481 Tw (Think about the hardware you are creating before trying it out. The text is necessarily vague and leaves) Tj T* 0 Tw (out details, so do not simply copy the figures and expect your CPU to work.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 448.1339 cm
Q
q
1 0 0 1 62.69291 424.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL 2.448945 Tw (Remember that, though the PC and data addresses are 32 bits, the instruction memory and data) Tj T* 0 Tw (memory addresses are only 8 bits. Be careful which bits you use to address the two memories.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 418.1339 cm
Q
q
1 0 0 1 62.69291 394.1339 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 14 Tm /F1 10 Tf 12 TL .975886 Tw (It is helpful to construct a spreadsheet of the instructions and the various control signals needed. This) Tj T* 0 Tw (way, errors in the control logic can be easily identified.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 394.1339 cm
Q
 
endstream
endobj
44 0 obj
<<
/Nums [ 0 45 0 R 1 46 0 R 2 47 0 R 3 48 0 R 4 49 0 R ]
>>
endobj
45 0 obj
<<
/S /D /St 1
>>
endobj
46 0 obj
<<
/S /D /St 2
>>
endobj
47 0 obj
<<
/S /D /St 3
>>
endobj
48 0 obj
<<
/S /D /St 4
>>
endobj
49 0 obj
<<
/S /D /St 5
>>
endobj
xref
0 50
0000000000 65535 f 
0000000073 00000 n 
0000000134 00000 n 
0000000241 00000 n 
0000000353 00000 n 
0000000605 00000 n 
0000000857 00000 n 
0000000962 00000 n 
0000001181 00000 n 
0000001296 00000 n 
0000001491 00000 n 
0000001705 00000 n 
0000001946 00000 n 
0000002161 00000 n 
0000002357 00000 n 
0000002553 00000 n 
0000002659 00000 n 
0000002917 00000 n 
0000002992 00000 n 
0000003119 00000 n 
0000003238 00000 n 
0000003363 00000 n 
0000003531 00000 n 
0000003635 00000 n 
0000003750 00000 n 
0000003923 00000 n 
0000004027 00000 n 
0000004166 00000 n 
0000004298 00000 n 
0000004412 00000 n 
0000004583 00000 n 
0000004710 00000 n 
0000004874 00000 n 
0000004979 00000 n 
0000005083 00000 n 
0000005191 00000 n 
0000005313 00000 n 
0000005438 00000 n 
0000005545 00000 n 
0000005633 00000 n 
0000013961 00000 n 
0000023015 00000 n 
0000032727 00000 n 
0000042042 00000 n 
0000046975 00000 n 
0000047052 00000 n 
0000047086 00000 n 
0000047120 00000 n 
0000047154 00000 n 
0000047188 00000 n 
trailer
<<
/ID 
[<7a119f25573ffc009522f4f42e5af760><7a119f25573ffc009522f4f42e5af760>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 16 0 R
/Root 15 0 R
/Size 50
>>
startxref
47222
%%EOF
